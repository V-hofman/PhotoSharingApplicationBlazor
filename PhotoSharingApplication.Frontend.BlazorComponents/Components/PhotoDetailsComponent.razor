
<MudCard Outlined="true" Style="min-width:10%; max-width:80%; margin-top:5%; border:solid 4px; border-radius:1%;">
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Color="Color.Dark">@Photo!.Id</MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">@Photo!.Title</MudText>
                            <MudFab HtmlTag="label"
                Color="Color.Success"
                Icon="@Icons.Filled.AttachFile"
                for="fileInput" />
        </CardHeaderContent>
    </MudCardHeader>
   
    <MudCardContent>
        <MudContainer Style="max-width:50%; max-height:50%;">
            <PhotoPictureComponent Photo="Photo"></PhotoPictureComponent>
            <MudDivider DividerType="DividerType.FullWidth"/>
        </MudContainer>   
        <MudContainer>
        <MudText Typo="Typo.body2">@Photo!.Description</MudText>
        </MudContainer>
    </MudCardContent>

    <MudCardActions>
        @if (Details)
        {
            <MudIconButton Icon="@Icons.Material.Filled.ZoomIn" Color="Color.Default" Href="@($"photos/details/{Photo!.Id}")" />
        }
        @if (Edit)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" Href="@($"photos/update/{Photo!.Id}")" />
        }
        @if (Delete)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Default" Href="@($"photos/delete/{Photo!.Id}")" />
        }
        @if (DeleteConfirm)
        {
            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever" Color="Color.Default" OnClick="@(async()=> await OnDeleteConfirmed.InvokeAsync(Photo!.Id))" />
        }      

        @if(EditConfirm || UploadConfirm)
        {
            <MudContainer>
            <MudTextField @bind-Value="Photo!.Title" Label="Title" FullWidth Variant="Variant.Filled"></MudTextField>
            <MudTextField @bind-Value="Photo!.Description" Label="Description" FullWidth Variant="Variant.Filled"></MudTextField>
            </MudContainer>
            <InputFile id="fileInput" OnChange="ProvideFile" hidden/>
 

        }
        <MudContainer>
        @if (EditConfirm)
        {
            
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" OnClick="@(async()=> await OnUpdate.InvokeAsync())" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
        }       
        @if (UploadConfirm)
        {
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" OnClick="@(async()=> await OnUpload.InvokeAsync())" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
        }
        </MudContainer>
    </MudCardActions>
</MudCard>
@code {
    [Parameter]
    public Photo? Photo { get; set; }

    [Parameter]
    public bool Details { get; set; }

    [Parameter]
    public bool Edit { get; set; }

    [Parameter]
    public bool Delete { get; set; }

    [Parameter]
    public bool DeleteConfirm { get; set; }

    [Parameter]
    public bool EditConfirm { get; set; }

    [Parameter]
    public bool UploadConfirm { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleteConfirmed { get; set; }

    [Parameter]
    public EventCallback OnUpdate { get; set; }

    [Parameter]
    public EventCallback OnUpload { get; set; }   

    [Parameter]
    public EventCallback<IBrowserFile> OnFileChange { get; set; }    

    private async Task ProvideFile(InputFileChangeEventArgs e)
    {
        var entries = e.File;
        if (entries is null)
        {
            return;
        }
        await OnFileChange.InvokeAsync(entries);
    }

}
