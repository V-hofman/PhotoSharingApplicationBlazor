@using PhotoSharingApplication.Shared.Interfaces
@using PhotoSharingApplication.Shared.Entities
@inject IPhotosService photosService
@inject NavigationManager navigationManager
@page "/photos/upload"

<PageTitle>Upload Photo</PageTitle>
<EditForm Model="@photo" OnValidSubmit="HandleValidSubmit">
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudText Typo="Typo.h3">Upload Photo</MudText>
            <MudCardContent>
                <MudTextField @bind-Value="photo.Title" Label="Title" FullWidth Variant="Variant.Outlined"></MudTextField>
                <MudTextField @bind-Value="photo.Description" Label="Description (optional):" FullWidth Variant="Variant.Outlined"></MudTextField>
                <InputFile id="fileInput112" OnChange="@UploadFiles" />
                <MudCardMedia Wide="true" ImageUrl="@(photo.PhotoFile == null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")"></MudCardMedia>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Upload</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</EditForm>
@code {
    Photo photo = new Photo();

    private async Task HandleValidSubmit()
    {
        await photosService.UploadAsync(photo);
        navigationManager.NavigateTo("/photos/all");
    }

    private async Task UploadFiles(InputFileChangeEventArgs e)
    {
        var entries = e.GetMultipleFiles();
        if (entries is null)
        {
            return;
        }
        photo.ImageMimeType = e.File.ContentType;

        using (var stream = new System.IO.MemoryStream())
        {
            var streamRead = e.File.OpenReadStream();
            await streamRead.CopyToAsync(stream);
            photo.PhotoFile = stream.ToArray();
        }
    }
}