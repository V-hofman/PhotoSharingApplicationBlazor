@using PhotoSharingApplication.Shared.Interfaces
@using PhotoSharingApplication.Shared.Entities
@inject IPhotosService photosService

@page "/photos/details/{id:int}"

<PageTitle>Photo Details - @photo?.Title</PageTitle>

@if (photo is null)
{
    <p>...Loading...</p>
}
else
{
    <MudContainer MaxWidth=MaxWidth.Medium>
        <MudCard Outlined="true" Style="width=80%">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="Color.Secondary">@photo.Id</MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">@photo.Title</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardMedia Image="@(photo.PhotoFile is null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")" Fluid=true; />
            <MudCardContent>
                <MudText Typo="Typo.body2">@photo.Description</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudIconButton Icon="@Icons.Material.Filled.ZoomIn" Color="Color.Default" Href="@($"photos/details/{photo.Id}")" />
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" Href="@($"photos/update/{photo.Id}")" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Default" Href="@($"photos/delete/{photo.Id}")" />
            </MudCardActions>
        </MudCard>
    </MudContainer>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Photo? photo;

    protected override async Task OnInitializedAsync()
    {
        photo = await photosService.FindAsync(Id);
    }
}
